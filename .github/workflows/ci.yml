name: CI

'on':
  push:
    branches: [ main ]
  pull_request:
  workflow_dispatch:

concurrency:
  group: ci-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build-test:
    name: Build & Test (backend/agent/web)
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Go (with cache for both modules)
        uses: actions/setup-go@v5
        with:
          go-version: '1.23.x'
          check-latest: true
          cache: true
          cache-dependency-path: |
            backend/nosd/go.sum
            agent/nos-agent/go.sum

      - name: Set up Node (with npm cache for /web)
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: web/package-lock.json

      - name: Normalize go.mod and tidy
        run: |
          sed -i 's/^go 1\.23\.0$/go 1.23/' backend/nosd/go.mod || true
          sed -i 's/^go 1\.23\.0$/go 1.23/' agent/nos-agent/go.mod || true
          (cd backend/nosd && go mod tidy)
          (cd agent/nos-agent && go mod tidy)

      - name: Build backend & agent
        run: |
          cd backend/nosd && CGO_ENABLED=0 go build ./... && cd -
          cd agent/nos-agent && CGO_ENABLED=0 go build ./... && cd -

      - name: Test backend & agent
        run: |
          cd backend/nosd && go test ./... -v && cd -
          cd agent/nos-agent && go test ./... -v && cd -

      - name: Web install & build
        run: |
          cd web
          npm ci
          npm run build
          cd -

      - name: Web tests (if configured)
        run: |
          cd web
          npm test -- --run || echo "no web tests configured"
          cd -

      - name: Upload web build (artifact)
        uses: actions/upload-artifact@v4
        with:
          name: web-dist
          path: web/dist
          if-no-files-found: ignore

  debs:
    name: Build Debian packages (every commit)
    needs: build-test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout at commit
        uses: actions/checkout@v4
        with:
          ref: ${{ github.sha }}

      - name: Set up Go (with cache for both modules)
        uses: actions/setup-go@v5
        with:
          go-version: '1.23.x'
          check-latest: true
          cache: true
          cache-dependency-path: |
            backend/nosd/go.sum
            agent/nos-agent/go.sum

      - name: Set up Node (with npm cache for /web)
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: web/package-lock.json

      - name: Install Debian packaging toolchain
        run: |
          sudo apt-get update
          sudo apt-get install -y debhelper devscripts fakeroot build-essential

      - name: Build .deb packages
        run: |
          chmod +x packaging/build-all.sh
          bash packaging/build-all.sh

      - name: Upload .deb artifacts
        uses: actions/upload-artifact@v4
        with:
          name: debs
          path: |
            dist/deb/*.deb
            dist/deb/*.changes
            dist/deb/*.buildinfo

  iso:
    name: Build ISO (every commit)
    needs: debs
    runs-on: ubuntu-latest
    container:
      image: debian:bookworm
      options: --privileged --security-opt seccomp=unconfined --cap-add=SYS_ADMIN --tmpfs /run --tmpfs /run/lock --tmpfs /tmp
    steps:
      - name: Show container context
        run: |
          id -u; id -g
          cat /etc/os-release || true

      - name: Install ISO build dependencies (container root)
        run: |
          apt-get update
          apt-get install -y git live-build xorriso squashfs-tools cpio debootstrap genisoimage ca-certificates

      - name: Checkout at commit
        uses: actions/checkout@v4
        with:
          ref: ${{ github.sha }}

      - name: Download .deb artifacts from this workflow
        uses: actions/download-artifact@v4
        with:
          name: debs
          path: dist/deb

      - name: Stage debs for ISO
        run: |
          mkdir -p packaging/iso/local-debs
          cp -v dist/deb/*.deb packaging/iso/local-debs/

      - name: Build ISO
        env:
          DEBIAN_FRONTEND: noninteractive
        run: |
          chmod +x packaging/iso/build.sh
          bash packaging/iso/build.sh packaging/iso/local-debs

      - name: Upload ISO artifact
        uses: actions/upload-artifact@v4
        with:
          name: iso-${{ github.sha }}
          path: dist/iso/*.iso

  smoke:
    name: Smoke ISO (QEMU, headless)
    needs: iso
    runs-on: ubuntu-latest
    timeout-minutes: 20
    steps:
      - name: Download ISO artifact from previous job
        uses: actions/download-artifact@v4
        with:
          name: iso-${{ github.sha }}
          path: dist/iso

      - name: Checkout repo (for scripts)
        uses: actions/checkout@v4
        with:
          ref: ${{ github.sha }}

      - name: Install QEMU
        run: |
          sudo apt-get update
          sudo apt-get install -y qemu-system-x86

      - name: Run smoke test (serial console)
        run: |
          chmod +x scripts/qemu-smoke.sh
          ISO_PATH=$(ls dist/iso/*.iso | head -n1)
          echo "[ci] Testing $ISO_PATH"
          sudo -E bash scripts/qemu-smoke.sh "$ISO_PATH"

      - name: Upload serial log (always)
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: smoke-serial-${{ github.sha }}
          path: /tmp/nos-serial.log
          if-no-files-found: warn
