name: CI

on:
  push:
    branches: [ main ]
    tags: [ 'v*' ]
  pull_request:
    branches: [ main ]

jobs:
  go:
    name: Go build & test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.23.x'
          check-latest: true
          cache: true
          cache-dependency-path: |
            backend/**/go.sum
            agent/**/go.sum
      - name: Test backend/nosd
        run: |
          cd backend/nosd
          go test -v -coverprofile=coverage.out ./...
      - name: Upload coverage (nosd)
        uses: actions/upload-artifact@v4
        with:
          name: coverage-nosd
          path: backend/nosd/coverage.out
      - name: Test agent/nos-agent
        run: |
          cd agent/nos-agent
          go test -v -coverprofile=coverage.out ./...
      - name: Upload coverage (nos-agent)
        uses: actions/upload-artifact@v4
        with:
          name: coverage-nos-agent
          path: agent/nos-agent/coverage.out

  web:
    name: Web build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: web/package-lock.json
      - name: Install deps
        working-directory: web
        run: npm ci
      - name: Generate OpenAPI types
        working-directory: web
        run: npm run typegen
      - name: Build
        working-directory: web
        run: npm run build
      - name: Upload dist
        uses: actions/upload-artifact@v4
        with:
          name: web-dist
          path: web/dist

  test-updates:
    name: Updates tests (backend + web)
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.23.x'
          check-latest: true
          cache: true
          cache-dependency-path: |
            backend/**/go.sum
            agent/**/go.sum

      - name: Run backend updates tests (nosd)
        run: |
          cd backend/nosd
          go test -v ./internal/server -run Updates

      - name: Run agent updates tests (nos-agent)
        run: |
          cd agent/nos-agent
          go test -v ./internal/server -run Updates

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: web/package-lock.json

      - name: Install web deps
        working-directory: web
        run: npm ci

      - name: Generate OpenAPI types
        working-directory: web
        run: npm run typegen

      - name: Run web tests (updates)
        working-directory: web
        run: npm run test:run -- --reporter=dot

  deb-packages:
    if: startsWith(github.ref, 'refs/tags/v')
    name: Build Debian packages
    runs-on: ubuntu-latest
    container:
      image: debian:bookworm
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Cache APT packages
        uses: actions/cache@v4
        with:
          path: |
            /var/cache/apt
            /var/lib/apt/lists
          key: ${{ runner.os }}-apt-cache-${{ hashFiles('.github/workflows/ci.yml') }}
          restore-keys: |
            ${{ runner.os }}-apt-cache-
      - name: Install deb build tooling
        run: |
          apt-get update
          apt-get install -y --no-install-recommends debhelper devscripts fakeroot build-essential dpkg-dev git curl ca-certificates
      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.23.x'
          check-latest: true
          cache: true
          cache-dependency-path: |
            backend/**/go.sum
            agent/**/go.sum
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: web/package-lock.json
      - name: Build .debs
        run: |
          chmod +x packaging/build-all.sh
          bash packaging/build-all.sh
      - name: Upload .deb artifacts
        uses: actions/upload-artifact@v4
        with:
          name: debs
          path: |
            dist/deb/*.deb
            dist/deb/*.changes
            dist/deb/*.buildinfo


