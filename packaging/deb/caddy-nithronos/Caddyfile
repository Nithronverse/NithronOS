# NithronOS Default Caddy Configuration
# This file is managed by the caddy-nithronos package

{
	# Admin API disabled for security
	admin off
	
	# Automatic HTTPS disabled by default (can be enabled via Setup Wizard)
	auto_https off
	
	# Global options
	grace_period 10s
}

# HTTP redirect to HTTPS
:80 {
	# Redirect all HTTP traffic to HTTPS
	redir https://{host}{uri} permanent
}

# HTTPS with self-signed certificate by default
:443 {
	# Use internal self-signed certificate
	tls internal
	
	# API reverse proxy
	handle /api/* {
		reverse_proxy 127.0.0.1:9000 {
			header_up X-Real-IP {remote_host}
			header_up X-Forwarded-For {remote_host}
			header_up X-Forwarded-Proto {scheme}
			
			# Timeouts for long-running operations
			transport http {
				dial_timeout 10s
				response_header_timeout 300s
			}
		}
	}
	
	# WebSocket support for real-time features
	@websocket {
		header Connection *Upgrade*
		header Upgrade websocket
	}
	handle @websocket {
		reverse_proxy 127.0.0.1:9000
	}
	
	# Static web UI
	handle {
		root * /usr/share/nithronos/web
		file_server
		
		# SPA fallback
		try_files {path} /index.html
		
		# Cache control for assets
		@assets {
			path *.js *.css *.svg *.png *.jpg *.jpeg *.gif *.ico *.woff *.woff2
		}
		header @assets Cache-Control "public, max-age=31536000, immutable"
		
		# Security headers
		header {
			X-Content-Type-Options "nosniff"
			X-Frame-Options "DENY"
			X-XSS-Protection "1; mode=block"
			Referrer-Policy "strict-origin-when-cross-origin"
			Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline'; style-src 'self' 'unsafe-inline'; img-src 'self' data:; font-src 'self' data:; connect-src 'self' wss://{host}"
		}
	}
	
	# Access logging
	log {
		output file /var/log/caddy/access.log {
			roll_size 100mb
			roll_keep 5
			roll_keep_for 720h
		}
		format json
		level INFO
	}
	
	# Error logging
	errors {
		log {
			output file /var/log/caddy/error.log {
				roll_size 100mb
				roll_keep 5
				roll_keep_for 720h
			}
			format json
			level ERROR
		}
	}
}

# Import additional configurations
import /etc/caddy/Caddyfile.d/*.caddy
