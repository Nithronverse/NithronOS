#!/bin/sh
# NithronOS Post-Installation Setup
# This script runs in the target system after base installation

set -e

echo "Configuring NithronOS..."

# Replace Debian branding with NithronOS
cat > /target/etc/os-release << 'EOF'
PRETTY_NAME="NithronOS 1.0 (Stable)"
NAME="NithronOS"
VERSION_ID="1.0"
VERSION="1.0 (Stable)"
VERSION_CODENAME=stable
ID=nithronos
ID_LIKE=debian
HOME_URL="https://github.com/Nithronverse/NithronOS"
SUPPORT_URL="https://github.com/Nithronverse/NithronOS/issues"
BUG_REPORT_URL="https://github.com/Nithronverse/NithronOS/issues"
DOCUMENTATION_URL="https://github.com/Nithronverse/NithronOS/wiki"
EOF

# Update /etc/issue
cat > /target/etc/issue << 'EOF'
================================================================================
     _   _ _ _   _                   ___  ____  
    | \\ | (_) |_| |__  _ __ ___  _ __/ _ \\/ ___| 
    |  \\| | | __| '_ \\| '__/ _ \\| '_ \\ | | \\___ \\ 
    | |\\  | | |_| | | | | | (_) | | | |_| |___) |
    |_| \\_|_|\\__|_| |_|_|  \\___/|_| |_\\___/____/ 
                                                  
    NithronOS 1.0 - Open Source NAS & HomeLab Platform
================================================================================
    Hostname: \\n | TTY: \\l | IP: \\4
================================================================================
EOF

# Update /etc/issue.net
cp /target/etc/issue /target/etc/issue.net

# Update MOTD
cat > /target/etc/motd << 'EOF'
================================================================================
                        Welcome to NithronOS
================================================================================

  NithronOS - Open Source NAS & HomeLab Platform
  Version: 1.0 (Stable)
  
  Web Interface: https://$(hostname -I | awk '{print $1}')
  Documentation: https://github.com/Nithronverse/NithronOS/wiki
  
  Quick Commands:
    nos-status     - System status overview
    nos-storage    - Storage management
    nos-apps       - Application management
    nos-backup     - Backup management
    
  For help, visit: https://github.com/Nithronverse/NithronOS

================================================================================
EOF

# Create NithronOS directories
mkdir -p /target/etc/nithronos
mkdir -p /target/var/lib/nos
mkdir -p /target/usr/share/nithronos
mkdir -p /target/srv/apps

# Set up Btrfs subvolumes if root is Btrfs
if [ "$(df -T /target | tail -1 | awk '{print $2}')" = "btrfs" ]; then
    echo "Configuring Btrfs subvolumes..."
    # These would be created during partitioning, but ensure mount options
    cat >> /target/etc/fstab << 'EOF'
# NithronOS Btrfs mount options
# Subvolumes should be mounted with optimal settings
# / - noatime,compress=zstd:3,ssd,discard=async,subvol=@
# /home - noatime,compress=zstd:3,subvol=@home
# /var - noatime,compress=zstd:3,subvol=@var
# /var/log - noatime,compress=zstd:3,subvol=@log
# /snapshots - noatime,subvol=@snapshots
EOF
fi

# Enable NithronOS services
in-target systemctl enable docker || true
in-target systemctl enable caddy || true
in-target systemctl enable nosd || true
in-target systemctl enable nos-agent || true

# Configure GRUB with NithronOS branding
cat > /target/etc/default/grub.d/nithronos.cfg << 'EOF'
GRUB_DISTRIBUTOR="NithronOS"
GRUB_DISABLE_OS_PROBER=false
EOF

# Update GRUB
in-target update-grub || true

# Remove Debian specific packages that show branding
in-target apt-get remove --purge -y debian-system-adjustments 2>/dev/null || true

# Create admin user if not exists (fallback)
if ! in-target id admin >/dev/null 2>&1; then
    in-target useradd -m -s /bin/bash -G sudo,docker admin || true
fi

# Set up initial NithronOS configuration
cat > /target/etc/nithronos/config.yaml << 'EOF'
# NithronOS Configuration
version: "1.0"
hostname: nithronos
features:
  docker: enabled
  monitoring: enabled
  backup: enabled
  apps: enabled
EOF

echo "NithronOS configuration complete!"

exit 0
