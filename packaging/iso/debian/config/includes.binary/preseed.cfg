#### NithronOS Automated Installation Preseed Configuration

### Localization
d-i debian-installer/locale string en_US.UTF-8
d-i keyboard-configuration/xkb-keymap select us
d-i debian-installer/language string en
d-i debian-installer/country string US

### Network configuration
d-i netcfg/choose_interface select auto
d-i netcfg/get_hostname string nithronos
d-i netcfg/get_domain string local
d-i netcfg/hostname string nithronos
d-i hw-detect/load_firmware boolean true

### Mirror settings
d-i mirror/country string manual
d-i mirror/http/hostname string deb.debian.org
d-i mirror/http/directory string /debian
d-i mirror/http/proxy string

### Account setup
# Skip root account, use sudo
d-i passwd/root-login boolean false
d-i passwd/make-user boolean true

# Create admin user
d-i passwd/user-fullname string NithronOS Admin
d-i passwd/username string admin
d-i passwd/user-password password nithronos
d-i passwd/user-password-again password nithronos
d-i user-setup/allow-password-weak boolean true
d-i user-setup/encrypt-home boolean false

### Clock and time zone setup
d-i clock-setup/utc boolean true
d-i time/zone string UTC
d-i clock-setup/ntp boolean true

### Partitioning
# Use entire disk with Btrfs
d-i partman-auto/disk string /dev/sda
d-i partman-auto/method string regular
d-i partman-auto/choose_recipe select btrfs-efi

# Custom partitioning recipe
d-i partman-auto/expert_recipe string                       \
      btrfs-efi ::                                          \
              512 512 512 fat32                             \
                      $primary{ }                            \
                      $bootable{ }                          \
                      method{ efi }                         \
                      format{ }                             \
              .                                              \
              1024 1024 -1 btrfs                           \
                      $primary{ }                           \
                      method{ format }                      \
                      format{ }                             \
                      use_filesystem{ }                    \
                      filesystem{ btrfs }                  \
                      mountpoint{ / }                       \
              .

# Confirm partitioning
d-i partman-partitioning/confirm_write_new_label boolean true
d-i partman/choose_partition select finish
d-i partman/confirm boolean true
d-i partman/confirm_nooverwrite boolean true

# Force UEFI installation
d-i partman-efi/non_efi_system boolean true

### Base system installation
d-i base-installer/install-recommends boolean true
d-i base-installer/kernel/image string linux-image-amd64

### Package selection
tasksel tasksel/first multiselect standard, ssh-server
d-i pkgsel/include string \
    sudo vim htop curl wget git tmux \
    btrfs-progs \
    smartmontools hdparm nvme-cli \
    net-tools dnsutils \
    systemd-timesyncd \
    ufw \
    docker.io docker-compose \
    caddy \
    python3 python3-pip

# Upgrade packages after debootstrap
d-i pkgsel/upgrade select full-upgrade

# Popularity contest
popularity-contest popularity-contest/participate boolean false

### Boot loader installation
d-i grub-installer/only_debian boolean true
d-i grub-installer/with_other_os boolean true
d-i grub-installer/bootdev string default

# Use GRUB EFI
d-i grub-installer/force-efi-extra-removable boolean true

### Finishing up the installation
# Avoid that last message about the install being complete
d-i finish-install/reboot_in_progress note

# Eject CD
d-i cdrom-detect/eject boolean true

# Power off after install
d-i debian-installer/exit/poweroff boolean false
d-i debian-installer/exit/halt boolean false

### Advanced options
# Prevent packaged version of /etc/hosts from being installed
d-i netcfg/get_hostname string nithronos
d-i netcfg/get_domain string local

# Late commands - run after base install
d-i preseed/late_command string \
    in-target mkdir -p /etc/nos /var/lib/nos /usr/share/nithronos/web /etc/nithronos/update; \
    in-target useradd --system --home /var/lib/nos --shell /bin/false nos || true; \
    in-target chown -R nos:nos /var/lib/nos /etc/nos || true; \
    in-target chmod 777 /etc/nithronos/update; \
    in-target echo "NithronOS 1.0" > /etc/nithronos-release; \
    in-target systemctl enable ssh || true; \
    in-target usermod -aG docker,sudo admin || true; \
    echo "NithronOS Installation Complete" > /target/etc/motd
