#!/bin/sh
set -e

echo "[kernel-paths] Starting kernel and initrd path fix..."
echo "[kernel-paths] Current directory: $(pwd)"

# We're already in the binary directory when this hook runs
# So we need to look for live/ not binary/live/

# Function to create symlinks for kernel files
fix_kernel_paths() {
    echo "[kernel-paths] Checking for kernel files in live/..."
    
    # Check if live directory exists
    if [ ! -d live ]; then
        echo "[kernel-paths] Creating live directory..."
        mkdir -p live
    fi
    
    # List contents of live directory
    echo "[kernel-paths] Contents of live/:"
    ls -la live/ 2>/dev/null || echo "live/ is empty"
    
    # Find and symlink kernel file
    if ls live/vmlinuz-* >/dev/null 2>&1; then
        kernel_file=$(ls live/vmlinuz-* | head -n1)
        echo "[kernel-paths] Found versioned kernel: $kernel_file"
        cd live
        ln -sf "$(basename "$kernel_file")" vmlinuz
        echo "[kernel-paths] Created symlink: vmlinuz -> $(basename "$kernel_file")"
        cd ..
    elif [ -f live/vmlinuz ]; then
        echo "[kernel-paths] Kernel already exists as vmlinuz"
    else
        echo "[kernel-paths] WARNING: No kernel file found in live/"
        # Try to find kernel in boot/
        if ls boot/vmlinuz* >/dev/null 2>&1; then
            kernel_file=$(ls boot/vmlinuz* | head -n1)
            echo "[kernel-paths] Found kernel in boot/: $kernel_file"
            cp -f "$kernel_file" live/vmlinuz
            echo "[kernel-paths] Copied kernel to live/vmlinuz"
        fi
    fi
    
    # Find and symlink initrd file
    if ls live/initrd.img-* >/dev/null 2>&1; then
        initrd_file=$(ls live/initrd.img-* | head -n1)
        echo "[kernel-paths] Found versioned initrd: $initrd_file"
        cd live
        ln -sf "$(basename "$initrd_file")" initrd.img
        echo "[kernel-paths] Created symlink: initrd.img -> $(basename "$initrd_file")"
        cd ..
    elif ls live/initrd-* >/dev/null 2>&1; then
        initrd_file=$(ls live/initrd-* | head -n1)
        echo "[kernel-paths] Found versioned initrd: $initrd_file"
        cd live
        ln -sf "$(basename "$initrd_file")" initrd.img
        echo "[kernel-paths] Created symlink: initrd.img -> $(basename "$initrd_file")"
        cd ..
    elif [ -f live/initrd.img ]; then
        echo "[kernel-paths] Initrd already exists as initrd.img"
    else
        echo "[kernel-paths] WARNING: No initrd file found in live/"
        # Try to find initrd in boot/
        if ls boot/initrd* >/dev/null 2>&1; then
            initrd_file=$(ls boot/initrd* | head -n1)
            echo "[kernel-paths] Found initrd in boot/: $initrd_file"
            cp -f "$initrd_file" live/initrd.img
            echo "[kernel-paths] Copied initrd to live/initrd.img"
        fi
    fi
    
    # Check for filesystem.squashfs
    if [ -f live/filesystem.squashfs ]; then
        echo "[kernel-paths] ✓ filesystem.squashfs found"
    else
        echo "[kernel-paths] WARNING: filesystem.squashfs not found in live/"
    fi
}

# Main execution
fix_kernel_paths

# Final verification
echo ""
echo "[kernel-paths] Final verification of live/:"
if [ -d live ]; then
    ls -la live/ 2>/dev/null || true
else
    echo "[kernel-paths] ERROR: live directory does not exist!"
fi

echo ""
echo "[kernel-paths] Checking critical files:"
for file in vmlinuz initrd.img filesystem.squashfs; do
    if [ -e "live/$file" ]; then
        size=$(ls -lh "live/$file" 2>/dev/null | awk '{print $5}')
        if [ -L "live/$file" ]; then
            target=$(readlink "live/$file")
            echo "[kernel-paths] ✓ $file exists (symlink -> $target, $size)"
        else
            echo "[kernel-paths] ✓ $file exists ($size)"
        fi
    else
        echo "[kernel-paths] ✗ $file MISSING!"
    fi
done

echo "[kernel-paths] Done"