#!/bin/sh
set -e

echo "[verify-kernel] Final verification of kernel paths..."
echo "[verify-kernel] This hook runs late to ensure all files are in place"

# Function to report file status
check_file() {
    local path="$1"
    local desc="$2"
    if [ -e "$path" ]; then
        local size=$(ls -lh "$path" 2>/dev/null | awk '{print $5}')
        local type=""
        if [ -L "$path" ]; then
            type=" (symlink -> $(readlink "$path"))"
        fi
        echo "[verify-kernel] ✓ $desc exists at $path ($size)$type"
        return 0
    else
        echo "[verify-kernel] ✗ $desc MISSING at $path"
        return 1
    fi
}

echo ""
echo "[verify-kernel] Checking binary/live directory:"
if [ -d binary/live ]; then
    echo "[verify-kernel] Contents of binary/live:"
    ls -la binary/live/ 2>/dev/null | head -20 || true
else
    echo "[verify-kernel] ERROR: binary/live directory does not exist!"
    echo "[verify-kernel] Creating binary/live and attempting recovery..."
    mkdir -p binary/live
fi

echo ""
echo "[verify-kernel] Checking critical boot files:"
check_file "binary/live/vmlinuz" "Kernel" || {
    # Try to recover by finding kernel elsewhere
    echo "[verify-kernel] Attempting to recover kernel..."
    for src in binary/vmlinuz* binary/boot/vmlinuz* chroot/boot/vmlinuz*; do
        if [ -f "$src" ]; then
            echo "[verify-kernel] Found kernel at $src, copying to binary/live/vmlinuz"
            cp -f "$src" binary/live/vmlinuz
            break
        fi
    done
    check_file "binary/live/vmlinuz" "Kernel (recovered)"
}

check_file "binary/live/initrd.img" "Initial RAM disk" || {
    # Try to recover by finding initrd elsewhere
    echo "[verify-kernel] Attempting to recover initrd..."
    for src in binary/initrd* binary/boot/initrd* chroot/boot/initrd.img*; do
        if [ -f "$src" ]; then
            echo "[verify-kernel] Found initrd at $src, copying to binary/live/initrd.img"
            cp -f "$src" binary/live/initrd.img
            break
        fi
    done
    check_file "binary/live/initrd.img" "Initial RAM disk (recovered)"
}

check_file "binary/live/filesystem.squashfs" "Root filesystem"

echo ""
echo "[verify-kernel] Checking GRUB configurations:"
for cfg in binary/boot/grub/grub.cfg binary/isolinux/isolinux.cfg binary/EFI/boot/grub.cfg; do
    if [ -f "$cfg" ]; then
        echo "[verify-kernel] Found: $cfg"
        if grep -q "/live/vmlinuz" "$cfg" 2>/dev/null; then
            echo "[verify-kernel]   ✓ References /live/vmlinuz"
        else
            echo "[verify-kernel]   ⚠ Does not reference /live/vmlinuz"
        fi
    fi
done

echo ""
echo "[verify-kernel] Summary:"
if [ -f binary/live/vmlinuz ] && [ -f binary/live/initrd.img ]; then
    echo "[verify-kernel] ✓ All critical files present - ISO should boot"
else
    echo "[verify-kernel] ✗ CRITICAL: Missing boot files - ISO will NOT boot!"
    echo "[verify-kernel] Please check the build logs for errors"
fi

echo "[verify-kernel] Done"
